generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(auto()) @map("_id") @db.ObjectId
  email          String          @unique
  password       String
  name           String?

  buyerRooms     MessageRoom[]   @relation("BuyerRooms")
  sellerRooms    MessageRoom[]   @relation("SellerRooms")

  messages       Message[]       @relation("UserMessages")

  products       Product[]
  reservations   Reservation[]
}

model Product {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  description   String
  price         Int
  image         String?
  status        ProductStatus @default(AVAILABLE)
  category      ProductCategory
  location      Location
  keywords      String[]
  createdAt     DateTime      @default(now())
  user          User          @relation(fields: [userId], references: [id])
  userId        String        @db.ObjectId
  reservations  Reservation[]
}

model Reservation {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  product    Product  @relation(fields: [productId], references: [id])
  productId  String   @db.ObjectId
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @db.ObjectId
  createdAt  DateTime @default(now())
}

model MessageRoom {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  productId String     @db.ObjectId

  buyerId   String
  buyer     User       @relation("BuyerRooms", fields: [buyerId], references: [id])

  sellerId  String
  seller    User       @relation("SellerRooms", fields: [sellerId], references: [id])

  messages  Message[]  @relation("RoomMessages")

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Message {
  id        String       @id @default(auto()) @map("_id") @db.ObjectId

  roomId    String
  room      MessageRoom  @relation("RoomMessages", fields: [roomId], references: [id])

  senderId  String
  sender    User         @relation("UserMessages", fields: [senderId], references: [id])

  content   String
  createdAt DateTime     @default(now())
}

enum ProductStatus {
  AVAILABLE
  RESERVED
  SOLD
  INACTIVE
}

enum ProductCategory {
  TEXTBOOKS
  ELECTRONICS
  DORM_FURNITURE
  SCHOOL_SUPPLIES
  CLOTHING
  ACCESSORIES
  SPORTS_FITNESS
  ENTERTAINMENT
  KITCHEN_APPLIANCES
  BIKES_TRANSPORT
  ROOM_DECOR
  STUDY_MATERIALS
  TECH_GADGETS
  MUSICAL_INSTRUMENTS
  OTHER
}

enum Location {
  TORONTO
  SCARBOROUGH
  MISSISSAUGA
  NORTH_YORK
  ETOBICOKE
  YORK
}